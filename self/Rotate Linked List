/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:
    ListNode* rotateRight(ListNode* head, int k) {
    if(!head ||!head->next)
    return head;
    ListNode* n=head;
    int c=0;
    while(n){
        c++;
        n=n->next;
    }
    while(k%c){
    ListNode* fast=head;
    while(fast && fast->next &&  fast->next->next){
    fast=fast->next;
    }
    if(fast){
    ListNode* x=fast->next;
    fast->next=NULL;
    x->next=head;
    head=x;
    }
    k--;
    }
    return head;
    }
};