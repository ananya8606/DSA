/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    int maxDepth(TreeNode* root) {
        queue<pair<TreeNode*,int>>q;
        if(!root)
        return 0;
        q.push({root,1});
        int lidx=1;
        while(!q.empty()){
            int level=q.size();
            for(int i=0;i<level;i++){
                TreeNode* cur=q.front().first;
                int lidx=q.front().second;
                q.pop();
                if(cur->left)
                q.push({cur->left,lidx+1});
                if(cur->right)
                q.push({cur->right,lidx+1});
            }
            lidx=max(lidx,q.front().second);
        }
        return lidx;
    }
};