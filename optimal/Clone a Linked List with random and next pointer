/*
// Definition for a Node.
class Node {
public:
    int val;
    Node* next;
    Node* random;
    
    Node(int _val) {
        val = _val;
        next = NULL;
        random = NULL;
    }
};
*/

class Solution {
public:
    Node* copyRandomList(Node* head) {
        if (!head) return NULL;
        
        // Step 1: Create new nodes and link them with the original nodes
        Node* x = head;
        while (x) {
            Node* y = new Node(x->val);
            y->next = x->next;
            x->next = y;
            x = y->next;
        }
        
        // Step 2: Copy the random pointers
        x = head;
        while (x) {
            if (x->random) {
                x->next->random = x->random->next;
            }
            x = x->next->next;
        }
        
        // Step 3: Separate the copied list from the original list
        x = head;
        Node* dummy = new Node(0);
        Node* tail = dummy;
        while (x) {
            tail->next = x->next;
            tail = tail->next;
            x->next = x->next->next;
            x = x->next;
        }
        tail->next = NULL;
        
        return dummy->next;
    }
};