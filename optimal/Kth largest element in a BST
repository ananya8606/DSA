/*The time complexity is O(min(k,n)), and the space complexity is O(h),where h is the height of the 
tree.*/
#include <bits/stdc++.h> 
/************************************************************
    Following is the Binary Search Tree node structure
    
    template <typename T>
    class TreeNode {
        public :
        T data;
        TreeNode<T> *left;
        TreeNode<T> *right;

        TreeNode(T data) {
            this -> data = data;
            left = NULL;
            right = NULL;
        }

        ~TreeNode() {
            if(left)
                delete left;
            if(right)
                delete right;
        }
    };

************************************************************/
void inorder(TreeNode<int>* root, int& k, int& ans,int &c) {
  if (!root) {
    return;
  }
  inorder(root->right, k, ans,c);
  c++;
  if(c==k) {
    ans = root->data;
    return;
  }
  inorder(root->left, k, ans,c);
}

int KthLargestNumber(TreeNode<int>* root, int k) {
  int ans =-1;
  int c=0;
  inorder(root, k, ans,c);
  if(ans==-1) {
    return -1; 
  }
  return ans;
}


