/*Time Complexity: O(N)
Space Complexity: O(N)*/
/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    vector<vector<int>> levelOrder(TreeNode* root) {
        queue<TreeNode*>q;
        vector<int>s;
        vector<vector<int>>ans;
        if(!root)
        return ans;
        q.push(root);
        s.push_back(root->val);
        ans.push_back(s);
        s.clear();
        while(!q.empty()){
            int level=q.size();
            for(int i=0;i<level;i++){
            TreeNode* cur=q.front();
            q.pop();
            if(cur->left)
            {
            q.push(cur->left);
            s.push_back(cur->left->val);
            }
            if(cur->right){
            q.push(cur->right);
            s.push_back(cur->right->val);
            }
            }
            if(!s.empty())
            ans.push_back(s);
            s.clear();
        }
        return ans;
    }
};