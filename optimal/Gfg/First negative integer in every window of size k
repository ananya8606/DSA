/* Using deque */
vector<long long> printFirstNegativeInteger(long long int A[],
                                             long long int N, long long int K) {
      deque<long long>d;
      vector<long long>ans;
      for(long long int i=0;i<K;i++)
      {
       if(A[i]<0)
       d.push_back(i);
      }
      for(long long int i=K;i<N;i++)
      {
       if(!d.empty())
       ans.push_back(A[d.front()]);
       else
       ans.push_back(0);
       while(!d.empty() && d.front()<(i-K+1))
       {
       d.pop_front();
       }
       if(A[i]<0)
       d.push_back(i);
      }
       if(!d.empty())
       ans.push_back(A[d.front()]);
       else
       ans.push_back(0);
      return ans;
 }

/* Using queue */

vector<long long> printFirstNegativeInteger(long long int A[],
                                             long long int N, long long int K) {
      queue<long long>d;
      vector<long long>ans;
      for(long long int i=0;i<K;i++)
      {
       if(A[i]<0)
       d.push(i);
      }
      for(long long int i=K;i<N;i++)
      {
       if(!d.empty())
       ans.push_back(A[d.front()]);
       else
       ans.push_back(0);
       while(!d.empty() && d.front()<(i-K+1))
       {
       d.pop();
       }
       if(A[i]<0)
       d.push(i);
      }
       if(!d.empty())
       ans.push_back(A[d.front()]);
       else
       ans.push_back(0);
      return ans;
 }
