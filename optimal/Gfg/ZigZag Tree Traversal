//User function Template for C++
/*Structure of the node of the binary tree is as
struct Node {
    int data;
    Node *left;
    Node *right;

    Node(int val) {
        data = val;
        left = right = NULL;
    }
};
*/

class Solution{
    public:
    //Function to store the zig zag order traversal of tree in a list.
    vector <int> zigZagTraversal(Node* root)
    {
    if(!root)
    return {};
    deque<pair<Node*,int>>q;
    q.push_front({root,0});
    vector<int>v;
    deque<int>r;
    while(!q.empty())
    {
    int n=q.size();
    for(int i=0;i<n;i++)
    {
    Node* a;
    int level=q.front().second;
    a=q.front().first;
    q.pop_front();
     if(level%2==1)
     v.push_back(a->data);
     else
     r.push_back(a->data);
     if(a->right)
    {
    q.push_back({a->right,level+1});
    }
    if(a->left)
    {
    q.push_back({a->left,level+1});
    }
    }
    while(!r.empty())
    {
    v.push_back(r.back());
    r.pop_back();
    }
    }
    return v;
    }
};
