/* https://youtu.be/46zD5d9y9b4?si=4psiWL4Ft9py6J_d */
/* Method-1
Recursive solution 0-based indexing */
/*You are required to complete this method */

class Solution
{
    public:
int josephus(int n, int k)
{
    if(n==1)
    {
        //Base case.
        return 1;
    }
    else
    {
        //recursive step.
        return (josephus(n-1,k)+k-1)%n+1;
    }
}
};

/* Method-2 
Recursive solution 1-based indexing */
/*You are required to complete this method */

class Solution
{
    public:
int josephus(int n, int k)
{
    if(n==1)
    {
        //Base case.
        return 1;
    }
    else
    {
        //recursive step.
    int x=(josephus(n-1,k)+k)%n;
    if(x==0)
    return n;
    else
    return x;
    }
}
};

/* Method - 3 
You are required to complete this method */

class Solution
{
    public:
    int josephus(int n, int k)
    {
    int i=1,ans=0;
    while(i<=n)
    {
    ans=(ans+k)%i;
    i++;
    }
    return ans+1;
    }
};
