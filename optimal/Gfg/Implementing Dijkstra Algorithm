class Solution {
public:
    vector<int> dijkstra(int V, vector<vector<int>> adj[], int S) {
        vector<int> dis(V, 1e9);
        priority_queue<pair<int, int>, vector<pair<int, int>>, greater<pair<int, int>>> pq;
        dis[S] = 0;
        pq.push({0, S});
        
        while (!pq.empty()) {
            int curdis = pq.top().first;
            int curnode = pq.top().second;
            pq.pop();

            for (auto it : adj[curnode]) {
                if (curdis + it[1] < dis[it[0]]) {
                    dis[it[0]] = curdis + it[1];
                    pq.push({dis[it[0]], it[0]}); 
                } 
                }
            }
         if (dis[V] == 1e9)
            return {-1};
        return dis;
    }
};
