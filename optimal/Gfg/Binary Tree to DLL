/* Structure for tree and linked list

struct Node
{
    int data;
    struct Node* left;
    struct Node* right;
    
    Node(int x){
        data = x;
        left = right = NULL;
    }
};
 */

// This function should return head to the DLL
class Solution
{
    public: 
    //Function to convert binary tree to doubly linked list and return it.
   void inorder(Node* root, Node*& prev)
{
    if (!root)
        return;

    // Traverse the left subtree
    inorder(root->left, prev);

    // Update the right pointer of the previous node (prev) to point to the current node
    if (prev)
        prev->right = root;

    // Update the left pointer of the current node to point to the previous node
    root->left = prev;

    // Move the prev pointer to the current node for the next iteration
    prev = root;

    // Traverse the right subtree
    inorder(root->right, prev);
}

  Node* bToDLL(Node* root)
{
    Node* prev = nullptr;
    inorder(root, prev);

    // Find the head of the DLL
    while (root->left)
        root = root->left;

    return root;
}

};
