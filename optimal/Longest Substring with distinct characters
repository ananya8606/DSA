//Time Complexity:O(N).Space Complexity:O(N).
class Solution {
public:
    int lengthOfLongestSubstring(string s) {
    unordered_map<char,int>m;
    int l=0,c=0;
    for(int i=0;i<s.size();i++){
    if(m.find(s[i])!=m.end() && m[s[i]]>=l)
    {
    l=m[s[i]]+1;
    }
    m[s[i]]=i;
    c=max(c,i-l+1);
    }
    return c;
    }
};